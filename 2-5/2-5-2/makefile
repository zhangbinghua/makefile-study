.PHONY:all
LIB = /home/hello/libhello.a
#函数名称：取目录函数—dir。 
#函数功能：从文件名序列“NAMES…”中取出各个文件名的目录部分。文件名的目
#录部分就是包含在文件名中的最后一个斜线（“/”）（包括斜线）之前的部分。 
#返回值：空格分割的文件名序列“NAMES…”中每一个文件的目录部分。 
#函数说明：如果文件名中没有斜线，认为此文件为当前目录（“./”）下的文件。
LIB1 = $(dir $(LIB))
#函数名称：取文件名函数——notdir。 
#函数功能：从文件名序列“NAMES…”中取出非目录部分。目录部分是指最后一个
#斜线（“/”）（包括斜线）之前的部分。删除所有文件名中的目录部分，
#只保留非目录部分。 
#返回值：文件名序列“NAMES…”中每一个文件的非目录部分。 
#函数说明：如果“NAMES…”中存在不包含斜线的文件名，则不改变这个文件名。
#以反斜线结尾的文件名，是用空串代替，因此当“NAMES…”中存在多
#个这样的文件名时，返回结果中分割各个文件名的空格数目将不确定！
#这是此函数的一个缺陷。 
LIB2 = $(notdir $(LIB))
#函数名称：取后缀函数—suffix。 
#函数功能：从文件名序列“NAMES…”中取出各个文件名的后缀。后缀是文件名中
#最后一个以点“.”开始的（包含点号）部分，如果文件名中不包含一个
#点号，则为空。 
#返回值：以空格分割的文件名序列“NAMES…”中每一个文件的后缀序列。 
#函数说明：“NAMES…”是多个文件名时，返回值是多个以空格分割的单词序列。
#如果文件名没有后缀部分，则返回空。 
LIB3 = $(suffix $(LIB))
#函数名称：取前缀函数—basename。 
#函数功能：从文件名序列“NAMES…”中取出各个文件名的前缀部分（点号之后的
#部分）。前缀部分指的是文件名中最后一个点号之前的部分。 
#返回值：空格分割的文件名序列“NAMES…”中各个文件的前缀序列。如果文件没
#有前缀，则返回空字串。 
#函数说明：如果“NAMES…”中包含没有后缀的文件名，此文件名不改变。如果一
#个文件名中存在多个点号，则返回值为此文件名的最后一个点号之前的
#文件名部分。 
LIB4 = $(basename $(LIB))
#函数名称：加后缀函数—addsuffix。 
#函数功能：为“NAMES…”中的每一个文件名添加后缀“SUFFIX”。参数“NAMES…”
#为空格分割的文件名序列，将“SUFFIX”追加到此序列的每一个文件名
#的末尾。 
#返回值：以单空格分割的添加了后缀“SUFFIX”的文件名序列。 
LIB5 = $(addsuffix .c,$(LIB4))
#函数名称：加前缀函数—addprefix。 
#函数功能：为“NAMES…”中的每一个文件名添加前缀“PREFIX”。参数“NAMES…”
#是空格分割的文件名序列，将“SUFFIX”添加到此序列的每一个文件名
#之前。 
#返回值：以单空格分割的添加了前缀“PREFIX”的文件名序列。 
LIB6 = $(addprefix /usr/lib/,$(LIB2))
#函数名称：获取匹配模式文件名函数—wildcard 
#函数功能：列出当前目录下所有符合模式“PATTERN”格式的文件名。 
#返回值：空格分割的、存在当前目录下的所有符合模式“PATTERN”的文件名。 
#函数说明：“PATTERN”使用shell可识别的通配符，包括“?”（单字符）、“*”（多
#字符）等。
SRCS = $(wildcard *.c)
all:
	@echo "LIB1 = $(LIB1)"
	@echo "LIB2 = $(LIB2)"
	@echo "LIB3 = $(LIB3)"
	@echo "LIB4 = $(LIB4)"
	@echo "LIB5 = $(LIB5)"
	@echo "LIB6 = $(LIB6)"	
	@echo "SRCS = $(SRCS)"
